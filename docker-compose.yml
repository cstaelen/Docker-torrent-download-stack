version: "3.7"

services:
  # https://doc.traefik.io/traefik/getting-started/quick-start/
  reverse-proxy:
    image: traefik:latest
    container_name: traefik
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8888:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    ports:
      - "9091:9091/tcp"
    volumes:
      - /share/CACHEDEV1_DATA/Container/wireguard/wg-client.conf:/config/wg0.conf
      - /lib/modules:/lib/modules
    restart: always

  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    network_mode: "service:wireguard"
    depends_on:
      - wireguard
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - USER=admin
      - PASS=password
    volumes:
      - /share/CACHEDEV1_DATA/Container/transmission/config:/config
      - /share/CACHEDEV1_DATA/Download:/downloads
      - /share/CACHEDEV1_DATA/Download/watch:/watch
    restart: always
    
  # https://github.com/linuxserver/docker-radarr
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: always
    ports:
      - "7878:7878"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/radarr/config:/config
      - /share/CACHEDEV1_DATA/Multimedia/Movies:/movies
      - /share/CACHEDEV1_DATA/Download:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.nas.docker`)
      - traefik.port=80

  # https://github.com/linuxserver/docker-sonarr
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: always
    ports:
      - "8989:8989"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/sonarr/config:/config
      - /share/CACHEDEV1_DATA/Multimedia/TvShow:/tv
      - /share/CACHEDEV1_DATA/Download:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.nas.docker`)
      - traefik.port=80

  # https://hub.docker.com/r/linuxserver/lidarr
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - /share/CACHEDEV1_DATA/Container/lidarr/config:/config
      - /share/CACHEDEV1_DATA/Multimedia/Music:/music #optional
      - /share/CACHEDEV1_DATA/Download:/downloads
    ports:
      - 8686:8686
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.rule=Host(`lidarr.nas.docker`)
      - traefik.port=80

  # https://github.com/linuxserver/docker-prowlarr
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: always
    ports:
      - "9696:9696"
    cap_add:
      - NET_ADMIN
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/prowlarr/config:/config
      - /share/CACHEDEV1_DATA/Download/watch:/downloads # transmission watch directory
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.nas.docker`)
      - traefik.port=80
