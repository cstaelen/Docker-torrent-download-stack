version: "3.7"

services:
  # https://doc.traefik.io/traefik/getting-started/quick-start/
  reverse-proxy:
    image: traefik:latest
    container_name: traefik
    command: --api.insecure=true --providers.docker
    ports:
      - "80:80"
      - "8888:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  wireguard:
    image: linuxserver/wireguard:latest
    container_name: wireguard
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    ports:
      - "9091:9091/tcp"
      - "54914:54914/tcp"
    volumes:
      - /share/CACHEDEV1_DATA/Container/wireguard/wgraoul.conf:/config/wg0.conf
      - /lib/modules:/lib/modules
    restart: always

  transmission:
    image: linuxserver/transmission:latest
    container_name: transmission
    network_mode: "service:wireguard"
    depends_on:
      - wireguard
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - USER=admin
      - PASS=yourpassword
    volumes:
      - /share/CACHEDEV1_DATA/Container/transmission/config:/config
      - /share/CACHEDEV1_DATA/Download:/downloads
      - /share/CACHEDEV1_DATA/Download/watch:/watch
    restart: always

  # https://github.com/linuxserver/docker-radarr
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: always
    ports:
      - "7878:7878"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/radarr/config:/config
      - /share/CACHEDEV1_DATA/Multimedia/Movies:/movies
      - /share/CACHEDEV1_DATA/Download:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`radarr.nas.docker`)
      - traefik.port=80

  # https://github.com/linuxserver/docker-sonarr
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: always
    ports:
      - "8989:8989"
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/sonarr/config:/config
      - /share/CACHEDEV1_DATA/Multimedia/TvShow:/tv
      - /share/CACHEDEV1_DATA/Download:/downloads
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`sonarr.nas.docker`)
      - traefik.port=80

  # https://github.com/linuxserver/docker-lidarr
  # https://github.com/RandomNinjaAtk/arr-scripts
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=501
      - PGID=501
      - TZ=Etc/UTC
    volumes:
      - /share/CACHEDEV1_DATA/Container/lidarr/config:/config
      - /share/CACHEDEV1_DATA/Download:/downloads
      - /share/CACHEDEV1_DATA/Multimedia/Music:/music
      - /share/CACHEDEV1_DATA/Container/lidarr/custom-services.d:/custom-services.d
      - /share/CACHEDEV1_DATA/Container/lidarr/custom-cont-init.d:/custom-cont-init.d
    ports:
      - 8686:8686
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr.rule=Host(`lidarr.nas.docker`)
      - traefik.port=80

  # https://github.com/linuxserver/docker-prowlarr
  prowlarr:
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    restart: always
    ports:
      - "9696:9696"
    cap_add:
      - NET_ADMIN
    environment:
      - PGID=1000
      - PUID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/prowlarr/config:/config
      - /share/CACHEDEV1_DATA/Download/watch:/downloads # transmission watch directory
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.nas.docker`)
      - traefik.port=80

  # https://github.com/linuxserver/docker-bazarr
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/bazarr/config:/config
      - /share/CACHEDEV1_DATA/Multimedia/Movies:/movies
      - /share/CACHEDEV1_DATA/Multimedia/TvShow:/tv
    ports:
      - 6767:6767
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.rule=Host(`bazarr.nas.docker`)
      - traefik.port=80

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - LOG_HTML=false
      - CAPTCHA_SOLVERnone
      - TZ=Europe/Paris
    ports:
      - "8191:8191"
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.flaresolverr.rule=Host(`flaresolverr.nas.docker`)
      - traefik.port=80

  # https://docs.linuxserver.io/images/docker-beets
  beets:
    image: lscr.io/linuxserver/beets:latest
    container_name: beets
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - /share/CACHEDEV1_DATA/Container/beets/config:/config
      - /share/CACHEDEV1_DATA/Multimedia/MusicToBeet:/downloads
      - /share/CACHEDEV1_DATA/Multimedia/Music:/music
    ports:
      - 8337:8337
    restart: unless-stopped

  tidarr:
    image: cstaelen/tidarr:latest
    container_name: 'tidarr'
    platform: linux/amd64
    ports:
      - 3000:3000
    volumes:
      - /share/CACHEDEV1_DATA/Container/tidarr/config/.tidal-dl.token.json:/root/.tidal-dl.token.json
      - /share/CACHEDEV1_DATA/Container/tidarr/config/.tidal-dl.json:/root/.tidal-dl.json
      - /share/CACHEDEV1_DATA/Multimedia/MusicToBeet:/home/app/standalone/download
    restart: 'unless-stopped'
    environment:
      - NEXT_PUBLIC_TIDAL_SEARCH_TOKEN=<your_token>
      - NEXT_PUBLIC_TIDAL_COUNTRY_CODE=<country_code>
    labels:
      - traefik.enable=true
      - traefik.http.routers.tidarr.rule=Host(`tidarr.nas.docker`)
      - traefik.port=80

  glances:
    container_name: glances
    image: nicolargo/glances:dev
    restart: unless-stopped
    pid: host
    privileged: true
    network_mode: "host"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/share/CACHEDEV1_DATA/Container/glances/glances.conf:/glances/conf/glances.conf"
    environment:
      GLANCES_OPT: "-C /glances/conf/glances.conf -w"
      TZ: "${TZ}"
    labels:
      - "traefik.port=61208"
      - "traefik.frontend.rule=Host:glances.nas.docker"

  portainer_edge_agent:
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '/var/lib/docker/volumes:/var/lib/docker/volumes'
      - '/:/host'
      - './data:/data'
    restart: always
    environment:
      - EDGE=1
      - EDGE_ID=<your_id>
      - EDGE_KEY=<your_key>
      - EDGE_INSECURE_POLL=1
    container_name: portainer_edge_agent
    image: 'portainer/agent:2.16.2'